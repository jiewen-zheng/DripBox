<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6150002: Last Updated: Wed Apr 12 22:38:30 2023
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; comm_handle &rArr; update_setFlag &rArr; program_flash &rArr; fmc_word_program
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC_CMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC_CMP_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[e]">DMA_Channel0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[f]">DMA_Channel1_2_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[10]">DMA_Channel3_4_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[9]">FMC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32e23x_it.o(.text.HardFault_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[20]">I2C0_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1a]">I2C0_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[21]">I2C1_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1b]">I2C1_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[7]">LVD_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32e23x_it.o(.text.NMI_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from gd32e23x_it.o(.text.PendSV_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[a]">RCU_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1c]">SPI0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from gd32e23x_it.o(.text.SVC_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from gd32e23x_it.o(.text.SysTick_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_gd32e23x.o(.text.SystemInit) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[12]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from gd32e23x_it.o(.text.TIMER0_BRK_UP_TRG_COM_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[13]">TIMER0_Channel_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[16]">TIMER13_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[17]">TIMER14_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[18]">TIMER15_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[19]">TIMER16_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[14]">TIMER2_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[15]">TIMER5_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1e]">USART0_IRQHandler</a> from gd32e23x_it.o(.text.USART0_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1f]">USART1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[6]">WWDGT_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[24]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[25]">fputc</a> from usart.o(.text.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[22]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[95]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[26]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[96]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[97]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[98]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[99]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_set_direction
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_offset
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_params_init
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[47]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
</UL>

<P><STRONG><a name="[27]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__aeabi_uidiv$div0</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[73]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systick.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>INT_key_X</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, motor_drive.o(.text.INT_key_X))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
</UL>

<P><STRONG><a name="[71]"></a>INT_key_Y</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, motor_drive.o(.text.INT_key_Y))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
</UL>

<P><STRONG><a name="[72]"></a>INT_key_Z</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, motor_drive.o(.text.INT_key_Z))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
</UL>

<P><STRONG><a name="[2c]"></a>INT_normalSalineLow</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, motor_drive.o(.text.INT_normalSalineLow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INT_normalSalineLow
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
</UL>

<P><STRONG><a name="[2e]"></a>MOTOR_SetDoutIt</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, motor_ctrl.o(.text.MOTOR_SetDoutIt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MOTOR_SetDoutIt &rArr; Mote_SetCoor
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mote_SetCoor
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_offset
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_Ctrl
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_UV
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
</UL>

<P><STRONG><a name="[33]"></a>Mote_OutEnable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, motor_drive.o(.text.Mote_OutEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mote_OutEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>Mote_SetCoor</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, motor_drive.o(.text.Mote_SetCoor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Mote_SetCoor
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_SetDoutIt
</UL>

<P><STRONG><a name="[62]"></a>Moter_DriveGotoZero</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, motor_drive.o(.text.Moter_DriveGotoZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Moter_DriveGotoZero
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>Moter_ReadAllStatic</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, motor_drive.o(.text.Moter_ReadAllStatic))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
</UL>

<P><STRONG><a name="[6e]"></a>Moter_ReadZero</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, motor_drive.o(.text.Moter_ReadZero))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>OUT_LED</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, motor_drive.o(.text.OUT_LED))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[31]"></a>OUT_UV</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, motor_drive.o(.text.OUT_UV))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUT_UV
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_SetDoutIt
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, system_gd32e23x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.TIMER0_BRK_UP_TRG_COM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER0_BRK_UP_TRG_COM_IRQHandler &rArr; timer0_update_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_update_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART0_IRQHandler &rArr; usart0_idle_handle &rArr; fifo_dynamic_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>WaterPump_Ctrl</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, motor_drive.o(.text.WaterPump_Ctrl))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_SetDoutIt
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_device
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[3c]"></a>comm_execute</STRONG> (Thumb, 908 bytes, Stack size 32 bytes, command.o(.text.comm_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = comm_execute &rArr; set_offset &rArr; program_flash &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ym_crc16
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send_data
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_device
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_offset
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_to_testPoint
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_offset
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_state
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_Ctrl
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_UV
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_LED
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
</UL>

<P><STRONG><a name="[43]"></a>comm_handle</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, command.o(.text.comm_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = comm_handle &rArr; update_setFlag &rArr; program_flash &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ym_crc16
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_dynamic_read
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_dynamic_get_occupy_size
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_setFlag
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>con_io_init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, motor_drive.o(.text.con_io_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = con_io_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_port_write
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>delay_decrement</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, systick.o(.text.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[35]"></a>delay_ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick.o(.text.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mote_OutEnable
</UL>

<P><STRONG><a name="[4f]"></a>device_params_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, motor_drive.o(.text.device_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = device_params_init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>dma_channel_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_dma.o(.text.dma_channel_disable))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[83]"></a>dma_channel_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_dma.o(.text.dma_channel_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[8c]"></a>dma_circulation_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_dma.o(.text.dma_circulation_disable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[8a]"></a>dma_deinit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gd32e23x_dma.o(.text.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[8b]"></a>dma_init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, gd32e23x_dma.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[81]"></a>dma_memory_address_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_dma.o(.text.dma_memory_address_config))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[8d]"></a>dma_memory_to_memory_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32e23x_dma.o(.text.dma_memory_to_memory_disable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[82]"></a>dma_transfer_number_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32e23x_dma.o(.text.dma_transfer_number_config))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[7f]"></a>dma_transfer_number_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_dma.o(.text.dma_transfer_number_get))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[50]"></a>erase_flash_page</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gd32e23x_flash.o(.text.erase_flash_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = erase_flash_page &rArr; fmc_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_offset
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_setFlag
</UL>

<P><STRONG><a name="[44]"></a>fifo_dynamic_get_occupy_size</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fifo.o(.text.fifo_dynamic_get_occupy_size))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
</UL>

<P><STRONG><a name="[46]"></a>fifo_dynamic_read</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fifo.o(.text.fifo_dynamic_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fifo_dynamic_read
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
</UL>

<P><STRONG><a name="[55]"></a>fifo_dynamic_register</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, fifo.o(.text.fifo_dynamic_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fifo_dynamic_register &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[80]"></a>fifo_dynamic_write</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, fifo.o(.text.fifo_dynamic_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fifo_dynamic_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[52]"></a>fmc_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32e23x_fmc.o(.text.fmc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_page
</UL>

<P><STRONG><a name="[54]"></a>fmc_lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_fmc.o(.text.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_page
</UL>

<P><STRONG><a name="[53]"></a>fmc_page_erase</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gd32e23x_fmc.o(.text.fmc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmc_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_page
</UL>

<P><STRONG><a name="[51]"></a>fmc_unlock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32e23x_fmc.o(.text.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_page
</UL>

<P><STRONG><a name="[76]"></a>fmc_word_program</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gd32e23x_fmc.o(.text.fmc_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmc_word_program
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
</UL>

<P><STRONG><a name="[25]"></a>fputc</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usart.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[5b]"></a>fwdgt_counter_reload</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_fwdgt.o(.text.fwdgt_counter_reload))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_feed
</UL>

<P><STRONG><a name="[3e]"></a>get_device_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, motor_drive.o(.text.get_device_state))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop_device
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[6f]"></a>get_execution_schedule</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, motor_ctrl.o(.text.get_execution_schedule))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
</UL>

<P><STRONG><a name="[2f]"></a>get_offset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, other.o(.text.get_offset))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_SetDoutIt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_to_testPoint
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[84]"></a>gpio_af_set</STRONG> (Thumb, 252 bytes, Stack size 52 bytes, gd32e23x_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[34]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_beepset
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_UV
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_LED
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_update_handle
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mote_OutEnable
</UL>

<P><STRONG><a name="[37]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_beepset
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_UV
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_LED
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_update_handle
</UL>

<P><STRONG><a name="[2d]"></a>gpio_input_bit_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_normalSalineLow
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_update_handle
</UL>

<P><STRONG><a name="[4c]"></a>gpio_mode_set</STRONG> (Thumb, 66 bytes, Stack size 28 bytes, gd32e23x_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;con_io_init
</UL>

<P><STRONG><a name="[4d]"></a>gpio_output_options_set</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gd32e23x_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;con_io_init
</UL>

<P><STRONG><a name="[4e]"></a>gpio_port_write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_port_write))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;con_io_init
</UL>

<P><STRONG><a name="[5a]"></a>iwdg_feed</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, systick.o(.text.iwdg_feed))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwdgt_counter_reload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>load_offset</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, other.o(.text.load_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = load_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>main</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = main &rArr; comm_handle &rArr; update_setFlag &rArr; program_flash &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zero_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_set_direction
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moter_DriveGotoZero
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_offset
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iwdg_feed
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_params_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;con_io_init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mote_OutEnable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5e]"></a>motor_Tim_Init</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, motor_drive.o(.text.motor_Tim_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = motor_Tim_Init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_primary_output_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>motor_handle</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, motor_ctrl.o(.text.motor_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = motor_handle &rArr; MOTOR_SetDoutIt &rArr; Mote_SetCoor
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zero_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_run_state
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moter_ReadZero
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moter_ReadAllStatic
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Moter_DriveGotoZero
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mote_SetCoor
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_SetDoutIt
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_state
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_Ctrl
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_UV
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>motor_set_direction</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, motor_ctrl.o(.text.motor_set_direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = motor_set_direction
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>move_to_testPoint</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, motor_ctrl.o(.text.move_to_testPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = move_to_testPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[65]"></a>nvic_irq_enable</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gd32e23x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
</UL>

<P><STRONG><a name="[39]"></a>nvic_vector_table_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e23x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>other_handle</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, other.o(.text.other_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = other_handle &rArr; INT_normalSalineLow
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_beepset
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_execution_schedule
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_normalSalineLow
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_key_Z
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_key_Y
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_key_X
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_state
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>out_beepset</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, motor_drive.o(.text.out_beepset))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;other_handle
</UL>

<P><STRONG><a name="[75]"></a>program_flash</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gd32e23x_flash.o(.text.program_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = program_flash &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_offset
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_setFlag
</UL>

<P><STRONG><a name="[91]"></a>rcu_clock_freq_get</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, gd32e23x_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[4b]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e23x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;con_io_init
</UL>

<P><STRONG><a name="[7a]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[79]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[41]"></a>set_offset</STRONG> (Thumb, 112 bytes, Stack size 88 bytes, other.o(.text.set_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = set_offset &rArr; program_flash &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_page
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[6c]"></a>set_run_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, motor_drive.o(.text.set_run_state))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
</UL>

<P><STRONG><a name="[40]"></a>stop_device</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, other.o(.text.stop_device))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = stop_device
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_state
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_Ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[5c]"></a>systick_config</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, systick.o(.text.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systick_config
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>timer0_update_handle</STRONG> (Thumb, 724 bytes, Stack size 24 bytes, motor_drive.o(.text.timer0_update_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer0_update_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_timer.o(.text.timer_auto_reload_shadow_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
</UL>

<P><STRONG><a name="[66]"></a>timer_deinit</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
</UL>

<P><STRONG><a name="[6a]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_timer.o(.text.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
</UL>

<P><STRONG><a name="[67]"></a>timer_init</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, gd32e23x_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
</UL>

<P><STRONG><a name="[6b]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32e23x_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
</UL>

<P><STRONG><a name="[78]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32e23x_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_update_handle
</UL>

<P><STRONG><a name="[77]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e23x_timer.o(.text.timer_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer0_update_handle
</UL>

<P><STRONG><a name="[68]"></a>timer_primary_output_config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32e23x_timer.o(.text.timer_primary_output_config))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_Tim_Init
</UL>

<P><STRONG><a name="[49]"></a>update_setFlag</STRONG> (Thumb, 44 bytes, Stack size 168 bytes, update.o(.text.update_setFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = update_setFlag &rArr; program_flash &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;program_flash
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_flash_page
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
</UL>

<P><STRONG><a name="[3b]"></a>usart0_idle_handle</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, usart.o(.text.usart0_idle_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usart0_idle_handle &rArr; fifo_dynamic_write
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_dynamic_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>usart0_init</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, usart.o(.text.usart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = usart0_init &rArr; gpio_af_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_to_memory_disable
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_dynamic_register
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>usart0_send_data</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, usart.o(.text.usart0_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart0_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[86]"></a>usart_baudrate_set</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gd32e23x_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[7d]"></a>usart_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[59]"></a>usart_data_transmit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send_data
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[85]"></a>usart_deinit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gd32e23x_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[8e]"></a>usart_dma_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_dma_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[89]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[58]"></a>usart_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_send_data
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[8f]"></a>usart_interrupt_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[7c]"></a>usart_interrupt_flag_clear</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[7b]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_idle_handle
</UL>

<P><STRONG><a name="[87]"></a>usart_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[88]"></a>usart_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>

<P><STRONG><a name="[3f]"></a>ym_crc16</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, crc16.o(.text.ym_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ym_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_execute
</UL>

<P><STRONG><a name="[61]"></a>zero_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, motor_drive.o(.text.zero_init))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_handle
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>__0printf$3</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a0]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[48]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comm_handle
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[57]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_dynamic_register
</UL>

<P><STRONG><a name="[56]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_dynamic_register
</UL>

<P><STRONG><a name="[90]"></a>puts</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = puts &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart0_init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[93]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
